import { ReactNode } from "react";
import logo from "../assets/logo.svg";
import { CourseCategoryModel } from "../types/course_model";
import Course_card from "../components/course_card";
import MetaLogo from "../assets/Meta_Platforms_Inc._logo.png";
import { SiCoursera, SiGeeksforgeeks, SiYoutube } from "react-icons/si";
import Job_card from "../components/job_card";

const courseCategories: CourseCategoryModel[] = [
  {
    title: "Web Development",
    description: "Learn how to build websites from scratch",
    courses: [
      {
        title: "Meta Front-End Developer Professional Certificate",
        aurthor: "Meta (formally facebook)",
        logo: <img srcSet={MetaLogo} className="w-[2em] h-[1.3em]" />,
        description:
          "Launch your career as a front-end developer. Build job-ready skills for an in-demand career and earn a credential from Meta. No degree or prior experience required to get started. Taught by Meta Staff",
        link: "https://www.coursera.org/professional-certificates/meta-front-end-developer?action=enroll",
      },
      {
        title: "Build Web Apps with ASP.NET",
        aurthor: "Skill path",
        logo: <p className="text-xs font-mono">Skill Path</p>,
        description:
          "Jumpstart your career with this skill path, first by learning the C# language, then building web apps with ASP.NET Core and the Razor Pages. Includes .NET, C#, Web Apps, Back End, Razor Pages, and more.",
        link: "https://www.codecademy.com/learn/paths/build-web-apps-with-asp-net",
      },
      {
        title: "Learn JavaScript",
        aurthor: "Coursera",
        logo: <p className="text-xs font-mono">Code Academy</p>,
        description:
          "Learn how to use JavaScript — a powerful and flexible programming language for adding website interactivity.",
        link: "https://www.codecademy.com/learn/introduction-to-javascript",
      },
      {
        title: "Introduction to HTML, CSS, & JavaScript",
        aurthor: "Skill path",
        logo: (
          <img
            srcSet="https://d3njjcbhbojbot.cloudfront.net/api/utilities/v1/imageproxy/http://coursera-university-assets.s3.amazonaws.com/c0/87a10033a311e892619b85c6fd62bb/IBM-200x48.png?auto=format%2Ccompress&dpr=1&h=45"
            className="w-[2.5em] h-[0.7em]"
          />
        ),
        description: `This course is part of multiple programs: 
IBM Full Stack Software Developer Professional Certificate
IBM iOS and Android Mobile App Developer Professional Certificate
IBM Front-End Developer Professional Certificate
IBM Back-end JavaScript Developer Professional Certificate
IBM Full-Stack JavaScript Developer Professional Certificate
IBM AI Developer Professional Certificate`,
        link: "https://www.codecademy.com/learn/paths/build-web-apps-with-asp-net",
      },
      {
        title: "Build a Website using an API with HTML, JavaScript, and JSON",
        aurthor: "Coursera",
        logo: <p className="text-xs font-mono">Coursera</p>,
        description:
          "In this project, you’ll support a European travel agency’s effort to increase booking by building a webpage that provides visitors with a 7-day weather forecast for major European cities. Accomplishing this task will require you to retrieve real-time weather data from an external service. In creating the webpage, you’ll request, process, and present the weather data using HTML, JavaScript, and JSON.  There isn’t just one right approach or solution in this scenario, which means you can create a truly unique project that helps you stand out to employers.",
        link: "https://www.coursera.org/projects/showcase-build-a-website-api-html-javascript-json",
      },
    ],
  },
  {
    title: "Back-End Development",
    description:
      "Learn how to build the server-side infrastructure and logic that powers dynamic websites and web applications.",
    courses: [
      {
        title: "JAVA Backend Development",
        description:
          "This extensive Java Backend Development course is a 12-week guided program to equip you with the right skills and make you interview-ready. Not only this, get hands-on experience in building web apps like e-wallets, movie ticket booking, etc.",
        aurthor: "Geeksforgeeks",
        logo: <SiGeeksforgeeks className="text-green-700" />,
        link: "https://www.geeksforgeeks.org/courses/Java-backend-live",
      },
      {
        title: "Server-Side JavaScript with Node.js",
        description:
          "This is an intermediate level backend development course through which you can learn the basics of MongoDB, Node, and ES6 to improve your development skills and create your own REST API. This is the most comprehensive course in backend development for beginners.",
        aurthor: "Youtube",
        logo: <SiYoutube className="text-red-700" />,
        link: "https://www.youtube.com/watch?v=TlB_eWDSMt4&pp=ygUXbm9kZWpzIGJhY2tlbmQgdHV0b3JpYWw%3D",
      },
      {
        title: "GoLang backend tutorial",
        description:
          "In this backend master class, we’re going to learn everything about how to design, develop, and deploy a complete backend system from scratch using Golang, PostgreSQL, Docker, gRPC, Kubernetes.",
        aurthor: "Youtube",
        logo: <SiYoutube className="text-red-700" />,
        link: "https://www.youtube.com/playlist?list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE",
      },
    ],
  },
  {
    title: "Mobile Development",
    description:
      "Learn how to build and deploy mobile applications for Android, IOS, WatchOS and other portable devices",
    courses: [
      {
        title:
          "Flutter Course for Beginners – 37-hour Cross Platform App Development Tutorial",
        description:
          "Learn how to use Flutter in this complete course for beginners. Flutter is an open-source UI software development kit used to create cross-platform applications for iOS, Android, Windows, Mac, and more.",
        aurthor: "Youtube",
        logo: <SiYoutube className="text-red-700 text-3xl" />,
        link: "https://www.youtube.com/watch?v=VPvVD8t02U8&pp=ygUaZmx1dHRlciBkZXZlbG9wbWVudCBjb3VzZXM%3D",
      },
      {
        title: "Swift Mobile app development",
        description:
          "Learn how to use the swift programming to build and deploy ios applications to the appstore",
        aurthor: "Youtube",
        logo: <SiYoutube className="text-red-700" />,
        link: "https://www.youtube.com/playlist?list=PLSzsOkUDsvdu5Mm67aBYs2YPu2OM4mFzt",
      },
      {
        title: "React Native full course for beginners",
        description:
          "This React Native Course for beginners from @DaveGrayTeachesCode is an all-in-one tutorial full of over 4 hours of React Native code and instruction to help you learn the basics of mobile app development.",
        aurthor: "Youtube",
        logo: <SiYoutube className="text-red-700" />,
        link: "https://www.youtube.com/watch?v=sm5Y7Vtuihg",
      },
    ],
  },
];

const jobList: JobModel[] = [
  {
    title: "ReactJS Frontend Developer",
    description:
      "CardTonic - We are looking for a skilled react.js developer to join our development team. In this role, you will be responsible for developing and implementing user interface components using React.js concepts and workflows such as Redux, Flux, and Webpack. You will also be responsible for profiling and improving front-end performance and documenting our front-end codebase.",
    link: "https://ng.indeed.com/viewjob?jk=c7e97804508f453a&from=shareddesktop",
  },
  {
    title: "Frontend Web Developer",
    description:
      "Tecton Studio - Tecton Studio is a dynamic and innovative design and development company, specializing in creating cutting-edge products and delivering outstanding solutions to our clients. Our projects span across a range of industries, and we are committed to fostering an environment where talent thrives and ideas flourish.",
    link: "https://ng.indeed.com/viewjob?jk=957ddc9b67ca54c8&from=shareddesktop",
  },
  {
    title: "UI/UX Designer",
    description:
      "Kenkeputa - As a UI/UX Engineer at Kenkeputa, you will play a critical role in shaping the design and usability of our mobile and web applications. You will collaborate with product managers, developers, and other stakeholders to create seamless, engaging, and user-friendly experiences tailored to the global market.",
    link: "https://www.jobberman.com/listings/uiux-designer-at-kenkeputa-np8px0",
  },
  {
    title: "DevOps Engineer",
    description:
      "Kenkeputa - As a DevOps Engineer, you will play a critical role in designing, implementing, and managing the infrastructure and deployment processes for our mobile and web applications. You’ll work closely with our development teams to ensure reliable, scalable, and secure solutions, enabling rapid iteration and delivery of high-quality applications.",
    link: "https://www.jobberman.com/listings/devops-engineer-at-kenkeputa-inc-pmrmd0",
  },
];

export default () => {
  return (
    <div>
      <Nav_bar />
      {courseCategories.map((item, index) => {
        return (
          <div className="py-[2em] px-[1.5em] space-y-6" key={index}>
            <SectionHeading
              title={item.title}
              subTitle={
                <div className="">
                  <p className="text-sm text-gray-600"></p>
                  <p className="text-sm text-gray-600">{item.description}</p>
                </div>
              }
            />

            <div className="flex flex-row space-x-4 space-y-4 flex-wrap">
              {item.courses.map((course, index) => {
                return (
                  <div key={index}>
                    <Course_card
                      title={course.title}
                      icon={course.logo}
                      link={course.link}
                      description={course.description}
                    />
                  </div>
                );
              })}
            </div>
          </div>
        );
      })}
      <div className="">
        <SectionHeading title="Job Listings" subTitle={<></>} />
      </div>
      <div className="flex py-[2em] space-x-6 px-[1.5em] space-y-6 flex-wrap">
        {jobList.map((jobs, index) => {
          return (
            <div key={index} className="">
              <Job_card
                description={jobs.description}
                link={jobs.link}
                message={jobs.title}
                price=""
              />
            </div>
          );
        })}
      </div>
    </div>
  );
};

function SectionHeading({
  title,
  subTitle,
}: {
  title: string;
  subTitle: ReactNode;
}) {
  return (
    <div>
      <div className="flex items-center space-x-3">
        <div
          id="line"
          className="w-[6em] h-[0.22em] rounded bg-[var(--primary-color)]"
        ></div>
        <div className="flex flex-col items-start">
          <p className="lexend-bold text-2xl">{title}</p>
          {subTitle}
        </div>
      </div>
    </div>
  );
}

function Nav_bar() {
  return (
    <div className="w-full top-0 sticky backdrop-blur-sm bg-[#ffffffa1] z-10 h-[4.7em] px-[2em] flex items-center justify-between border-b-2 border-gray-5001">
      <div>
        <img src="" alt="" srcSet={logo} className="w-[8em]" />
      </div>
      <div className="flex space-x-4">
        <p className="text-base text-gray-700">
          {" "}
          <span className="lexend-bold text-blue-700">
            {courseCategories.length}
          </span>{" "}
          course categories
        </p>
        <p className="text-base text-gray-700">
          {" "}
          <span className="lexend-bold text-blue-700">
            {jobList.length}
          </span>{" "}
          jobs
        </p>
      </div>
    </div>
  );
}


_____DASHBOARD




import { BrowserRouter as Router, Routes, Route } from "react-router";
import { ToastContainer } from "react-toastify";
import Home from "./screens/home";
import Signin from "./screens/signin";
import Not_found from "./screens/not_found";
import Signup from "./screens/signup";
import { useViewState as useViewStore } from "./stores/view-store";
import Loading from "./screens/loading";
import Dashboard from "./screens/dashboard";

export default () => {
  const viewModel = useViewStore();
  return (
    <div>
      {viewModel.isLoading == true ? <Loading /> : null}
      <ToastContainer />
      <Router>
        <Routes>
          <Route path="/" element={<Home />} />
          {/* <Route path="/auth" element={<SigninProtectedRoute />}> */}
          <Route path="/auth/signin" element={<Signin />} />
          <Route path="/auth/signup" element={<Signup />} />
          <Route path="/dashboard" element={<Dashboard />} />
          {/* </Route> */}
          <Route path="*" element={<Not_found />} />
        </Routes>
      </Router>
    </div>
  );
};


____________ APP.TS




import { ReactNode } from "react";
import logo from "../assets/logo.svg";
import { CourseCategoryModel } from "../types/course_model";
import Course_card from "../components/course_card";
import MetaLogo from "../assets/Meta_Platforms_Inc._logo.png";
import { SiCoursera, SiGeeksforgeeks, SiYoutube } from "react-icons/si";
import Job_card from "../components/job_card";

const courseCategories: CourseCategoryModel[] = [
  {
    title: "Web Development",
    description: "Learn how to build websites from scratch",
    courses: [
      {
        title: "Meta Front-End Developer Professional Certificate",
        aurthor: "Meta (formally facebook)",
        logo: <img srcSet={MetaLogo} className="w-[2em] h-[1.3em]" />,
        description:
          "Launch your career as a front-end developer. Build job-ready skills for an in-demand career and earn a credential from Meta. No degree or prior experience required to get started. Taught by Meta Staff",
        link: "https://www.coursera.org/professional-certificates/meta-front-end-developer?action=enroll",
      },
      {
        title: "Build Web Apps with ASP.NET",
        aurthor: "Skill path",
        logo: <p className="text-xs font-mono">Skill Path</p>,
        description:
          "Jumpstart your career with this skill path, first by learning the C# language, then building web apps with ASP.NET Core and the Razor Pages. Includes .NET, C#, Web Apps, Back End, Razor Pages, and more.",
        link: "https://www.codecademy.com/learn/paths/build-web-apps-with-asp-net",
      },
      {
        title: "Learn JavaScript",
        aurthor: "Coursera",
        logo: <p className="text-xs font-mono">Code Academy</p>,
        description:
          "Learn how to use JavaScript — a powerful and flexible programming language for adding website interactivity.",
        link: "https://www.codecademy.com/learn/introduction-to-javascript",
      },
      {
        title: "Introduction to HTML, CSS, & JavaScript",
        aurthor: "Skill path",
        logo: (
          <img
            srcSet="https://d3njjcbhbojbot.cloudfront.net/api/utilities/v1/imageproxy/http://coursera-university-assets.s3.amazonaws.com/c0/87a10033a311e892619b85c6fd62bb/IBM-200x48.png?auto=format%2Ccompress&dpr=1&h=45"
            className="w-[2.5em] h-[0.7em]"
          />
        ),
        description: `This course is part of multiple programs: 
IBM Full Stack Software Developer Professional Certificate
IBM iOS and Android Mobile App Developer Professional Certificate
IBM Front-End Developer Professional Certificate
IBM Back-end JavaScript Developer Professional Certificate
IBM Full-Stack JavaScript Developer Professional Certificate
IBM AI Developer Professional Certificate`,
        link: "https://www.codecademy.com/learn/paths/build-web-apps-with-asp-net",
      },
      {
        title: "Build a Website using an API with HTML, JavaScript, and JSON",
        aurthor: "Coursera",
        logo: <p className="text-xs font-mono">Coursera</p>,
        description:
          "In this project, you’ll support a European travel agency’s effort to increase booking by building a webpage that provides visitors with a 7-day weather forecast for major European cities. Accomplishing this task will require you to retrieve real-time weather data from an external service. In creating the webpage, you’ll request, process, and present the weather data using HTML, JavaScript, and JSON.  There isn’t just one right approach or solution in this scenario, which means you can create a truly unique project that helps you stand out to employers.",
        link: "https://www.coursera.org/projects/showcase-build-a-website-api-html-javascript-json",
      },
    ],
  },
  {
    title: "Back-End Development",
    description:
      "Learn how to build the server-side infrastructure and logic that powers dynamic websites and web applications.",
    courses: [
      {
        title: "JAVA Backend Development",
        description:
          "This extensive Java Backend Development course is a 12-week guided program to equip you with the right skills and make you interview-ready. Not only this, get hands-on experience in building web apps like e-wallets, movie ticket booking, etc.",
        aurthor: "Geeksforgeeks",
        logo: <SiGeeksforgeeks className="text-green-700" />,
        link: "https://www.geeksforgeeks.org/courses/Java-backend-live",
      },
      {
        title: "Server-Side JavaScript with Node.js",
        description:
          "This is an intermediate level backend development course through which you can learn the basics of MongoDB, Node, and ES6 to improve your development skills and create your own REST API. This is the most comprehensive course in backend development for beginners.",
        aurthor: "Youtube",
        logo: <SiYoutube className="text-red-700" />,
        link: "https://www.youtube.com/watch?v=TlB_eWDSMt4&pp=ygUXbm9kZWpzIGJhY2tlbmQgdHV0b3JpYWw%3D",
      },
      {
        title: "GoLang backend tutorial",
        description:
          "In this backend master class, we’re going to learn everything about how to design, develop, and deploy a complete backend system from scratch using Golang, PostgreSQL, Docker, gRPC, Kubernetes.",
        aurthor: "Youtube",
        logo: <SiYoutube className="text-red-700" />,
        link: "https://www.youtube.com/playlist?list=PLy_6D98if3ULEtXtNSY_2qN21VCKgoQAE",
      },
    ],
  },
  {
    title: "Mobile Development",
    description:
      "Learn how to build and deploy mobile applications for Android, IOS, WatchOS and other portable devices",
    courses: [
      {
        title:
          "Flutter Course for Beginners – 37-hour Cross Platform App Development Tutorial",
        description:
          "Learn how to use Flutter in this complete course for beginners. Flutter is an open-source UI software development kit used to create cross-platform applications for iOS, Android, Windows, Mac, and more.",
        aurthor: "Youtube",
        logo: <SiYoutube className="text-red-700 text-3xl" />,
        link: "https://www.youtube.com/watch?v=VPvVD8t02U8&pp=ygUaZmx1dHRlciBkZXZlbG9wbWVudCBjb3VzZXM%3D",
      },
      {
        title: "Swift Mobile app development",
        description:
          "Learn how to use the swift programming to build and deploy ios applications to the appstore",
        aurthor: "Youtube",
        logo: <SiYoutube className="text-red-700" />,
        link: "https://www.youtube.com/playlist?list=PLSzsOkUDsvdu5Mm67aBYs2YPu2OM4mFzt",
      },
      {
        title: "React Native full course for beginners",
        description:
          "This React Native Course for beginners from @DaveGrayTeachesCode is an all-in-one tutorial full of over 4 hours of React Native code and instruction to help you learn the basics of mobile app development.",
        aurthor: "Youtube",
        logo: <SiYoutube className="text-red-700" />,
        link: "https://www.youtube.com/watch?v=sm5Y7Vtuihg",
      },
    ],
  },
];

const jobList: JobModel[] = [
  {
    title: "ReactJS Frontend Developer",
    description:
      "CardTonic - We are looking for a skilled react.js developer to join our development team. In this role, you will be responsible for developing and implementing user interface components using React.js concepts and workflows such as Redux, Flux, and Webpack. You will also be responsible for profiling and improving front-end performance and documenting our front-end codebase.",
    link: "https://ng.indeed.com/viewjob?jk=c7e97804508f453a&from=shareddesktop",
  },
  {
    title: "Frontend Web Developer",
    description:
      "Tecton Studio - Tecton Studio is a dynamic and innovative design and development company, specializing in creating cutting-edge products and delivering outstanding solutions to our clients. Our projects span across a range of industries, and we are committed to fostering an environment where talent thrives and ideas flourish.",
    link: "https://ng.indeed.com/viewjob?jk=957ddc9b67ca54c8&from=shareddesktop",
  },
  {
    title: "UI/UX Designer",
    description:
      "Kenkeputa - As a UI/UX Engineer at Kenkeputa, you will play a critical role in shaping the design and usability of our mobile and web applications. You will collaborate with product managers, developers, and other stakeholders to create seamless, engaging, and user-friendly experiences tailored to the global market.",
    link: "https://www.jobberman.com/listings/uiux-designer-at-kenkeputa-np8px0",
  },
  {
    title: "DevOps Engineer",
    description:
      "Kenkeputa - As a DevOps Engineer, you will play a critical role in designing, implementing, and managing the infrastructure and deployment processes for our mobile and web applications. You’ll work closely with our development teams to ensure reliable, scalable, and secure solutions, enabling rapid iteration and delivery of high-quality applications.",
    link: "https://www.jobberman.com/listings/devops-engineer-at-kenkeputa-inc-pmrmd0",
  },
];

export default () => {
  return (
    <div>
      <Nav_bar />
      {courseCategories.map((item, index) => {
        return (
          <div className="py-[2em] px-[1.5em] space-y-6" key={index}>
            <SectionHeading
              title={item.title}
              subTitle={
                <div className="">
                  <p className="text-sm text-gray-600"></p>
                  <p className="text-sm text-gray-600">{item.description}</p>
                </div>
              }
            />

            <div className="flex flex-row space-x-4 space-y-4 flex-wrap">
              {item.courses.map((course, index) => {
                return (
                  <div key={index}>
                    <Course_card
                      title={course.title}
                      icon={course.logo}
                      link={course.link}
                      description={course.description}
                    />
                  </div>
                );
              })}
            </div>
          </div>
        );
      })}
      <div className="">
        <SectionHeading title="Job Listings" subTitle={<></>} />
      </div>
      <div className="flex py-[2em] space-x-6 px-[1.5em] space-y-6 flex-wrap">
        {jobList.map((jobs, index) => {
          return (
            <div key={index} className="">
              <Job_card
                description={jobs.description}
                link={jobs.link}
                message={jobs.title}
                price=""
              />
            </div>
          );
        })}
      </div>
    </div>
  );
};

function SectionHeading({
  title,
  subTitle,
}: {
  title: string;
  subTitle: ReactNode;
}) {
  return (
    <div>
      <div className="flex items-center space-x-3">
        <div
          id="line"
          className="w-[6em] h-[0.22em] rounded bg-[var(--primary-color)]"
        ></div>
        <div className="flex flex-col items-start">
          <p className="lexend-bold text-2xl">{title}</p>
          {subTitle}
        </div>
      </div>
    </div>
  );
}

function Nav_bar() {
  return (
    <div className="w-full top-0 sticky backdrop-blur-sm bg-[#ffffffa1] z-10 h-[4.7em] px-[2em] flex items-center justify-between border-b-2 border-gray-5001">
      <div>
        <img src="" alt="" srcSet={logo} className="w-[8em]" />
      </div>
      <div className="flex space-x-4">
        <p className="text-base text-gray-700">
          {" "}
          <span className="lexend-bold text-blue-700">
            {courseCategories.length}
          </span>{" "}
          course categories
        </p>
        <p className="text-base text-gray-700">
          {" "}
          <span className="lexend-bold text-blue-700">
            {jobList.length}
          </span>{" "}
          jobs
        </p>
      </div>
    </div>
  );
}



____________ Courses.TS




import { ReactNode } from "react";
import Nav_bar from "../components/nav_bar";
import useNavStore from "../stores/nav-state";
import Courses from "./courses";
import Jobs from "./jobs";
import { FaCircle } from "react-icons/fa";
import CommunityImg from "../assets/hero_section.png";
import CourseraLogo from "../assets/Coursera_logo_(2020) 1.png";
import UdemyLogo from "../assets/Udemy_logo 1.png";
import YoutubeLogo from "../assets/new-youtube-logo-logo-svgrepo-com 1.png";
import FreeCodeCampLogo from "../assets/FreeCodeCamp_logo 1.png";
import CodeWithMoshLogo from "../assets/logo 1.png";
import Course_card from "../components/course_card";
import WebLogo from "../assets/world-wide-web_841364 1.png";
import AndroidLogo from "../assets/android_robot.png";
import NodeLogo from "../assets/node_js_logo.png";
import Job_card from "../components/job_card";

const HomeScreens: ReactNode[] = [<Home />, <Courses />, <Jobs />];

function Home({}) {
  return (
    <div className=" px-[2em]">
      {/* Hero section */}
      <div className="flex mb-[1em] py-[1.5em] justify-between">
        <div className="space-y-4 w-[40%]">
          <div className="flex space-x-2 items-center">
            <FaCircle className="text-[0.36em] text-blue-700" />
            <p className="lexend-bold text-sm text-blue-700 ">
              E-Learning platform
            </p>
          </div>
          <div>
            <p className="lexend-bold text-[2.2em]">
              Get Top-Notch Courses in Tech, Job opportunities and{" "}
              <span className="text-[var(--primary-color)]">Freelancing.</span>
            </p>
            <p className="">
              Here at{" "}
              <span className="lexend-bold">
                <span className="text-[var(--primary-color)]">Skill</span>
                Match
              </span>{" "}
              we offer top-notch to break you into Tech or to take your existing
              skills to the max, we also provide jobs postings and freelancing
              opportunities for our users.
            </p>
          </div>
        </div>
        <div className="flex w-[60%] justify-center items-center">
          <img alt="" className="w-[24em]" srcSet={CommunityImg} />
        </div>
      </div>

      <div className="mb-[3em]">
        <div className="mb-[0.7em]">
          <SectionHeading
            title="Popular Courses"
            subTitle={
              <p className="text-sm text-gray-600">
                Get trending HOT courses in tech space to jump on and start
                building
              </p>
            }
          />
        </div>
        <div className="flex items-center mb-[3em] space-x-[5em]">
          <img srcSet={CourseraLogo} className="w-[6em]" />
          <img srcSet={UdemyLogo} className="w-[4em]" />
          <img srcSet={YoutubeLogo} className="w-[6em]" />
          <img srcSet={FreeCodeCampLogo} className="w-[6em]" />
          <img srcSet={CodeWithMoshLogo} className="w-[6em]" />
        </div>

        {/* courses list */}
        <div className="flex space-y-3 items-start justify-start flex-wrap space-x-10">
          <Course_card
            title="Web Development"
            icon={<img srcSet={WebLogo} className="w-[1.3em] h-[1.3em]" />}
            link=""
            description="Get roadmaps on web development, from Zero to Hero, Topics ranging from HTML, CSS, JavaScript and other frameworks to boot."
          />
          <Course_card
            title="Mobile App Development"
            icon={<img srcSet={AndroidLogo} className="w-[1.3em] h-[1.3em]" />}
            description="Hop into the world of mobile development, get started now and build functionality driven mobile applications, with Flutter, Swift and Java"
            link=""
          />
          <Course_card
            title="Backend Development"
            icon={<img srcSet={NodeLogo} className="w-[1.3em] h-[1.3em]" />}
            description="Learn to build scalable server-side applications with our comprehensive course, covering programming languages, database management, API design, and cloud platforms."
            link=""
          />
        </div>
      </div>

      {/* Job pre-section */}
      <div className="mb-[3em]">
        <div className="mb-[3em]">
          <SectionHeading
            title="Freelancing?"
            subTitle={
              <div className="">
                <p className="text-sm text-gray-600">
                  Apply for jobs on{" "}
                  <span className="lexend-bold">
                    <span className="text-[var(--primary-color)]">Skill</span>
                    Match
                  </span>{" "}
                </p>
                <p className="text-sm text-gray-600">
                  freelance with job postings on the platform and get noticed by
                  companies looking to hire.
                </p>
              </div>
            }
          />
        </div>
        <div className="flex items-start justify-start flex-wrap space-x-7">
          <Job_card
            message="Finance website required"
            price="500"
            link="https://www.upwork.com/jobs/~021882555367239211057"
            description="I require somebody to design a website where users will select a stock market portfolio , a finance API will need to be incorporated to track real time stock prices, and portfolio performance. Each user will need to log in and to be able to track the performance of their portfolio."
          />
          <Job_card
            message="Frontend Developer with Expertise in React, Next.js, TailwindCSS"
            price="15 per hour"
            link="https://www.upwork.com/jobs/~021881877715130150068"
            description="We are seeking a highly skilled and experienced Frontend Developer to join our team on a freelance basis. The ideal candidate will have a strong command of modern frontend and backend technologies, including React.js, Next.js, TailwindCSS, ShadCN, HTML, CSS, JavaScript, TypeScript, and Redux."
          />
          <Job_card
            message="Senior React/Next.js Developer for E-Commerce Team"
            price="1,500 per month"
            link="https://www.upwork.com/nx/proposals/job/~021881446625622866588/apply/"
            description="We are seeking a highly skilled Senior React/Next.js Developer to join our e-commerce development team. The ideal candidate will have a proven track record in building scalable web applications using React and Next.js. Your role will involve Refactoring the next.js code base from daisyui to Shadcn/ui withTailwind CSS."
          />
        </div>
      </div>
    </div>
  );

  function SectionHeading({
    title,
    subTitle,
  }: {
    title: string;
    subTitle: ReactNode;
  }) {
    return (
      <div>
        <div className="flex items-center space-x-3">
          <div
            id="line"
            className="w-[6em] h-[0.22em] rounded bg-[var(--primary-color)]"
          ></div>
          <div className="flex flex-col items-start">
            <p className="lexend-bold text-2xl">{title}</p>
            {subTitle}
          </div>
        </div>
      </div>
    );
  }
}

export default () => {
  const navStore = useNavStore();
  return (
    <div>
      <Nav_bar />
      {HomeScreens[navStore.current_select]}
    </div>
  );
};



__________ Homepage




import { Link } from "react-router";
import { Animate } from "react-simple-animate";

// 404 error code
export default () => {
  return (
    <div className="flex h-screen items-center justify-center">
      <div className="flex flex-col items-center justify-center">
        <div className="flex mb-[0.45em] items-center">
          <div className="border-r-2 border-gray-600 pr-3">
            <Animate
              play
              start={{ transform: "translateX(10px)" }}
              end={{ transform: "translateX(-5px)" }}
            >
              <p className="font-bold text-xl">404</p>
            </Animate>
          </div>
          <div>
            <Animate
              play
              start={{ transform: "translateX(-5px)" }}
              end={{ transform: "translateX(5px)" }}
            >
              <p className="pl-3 text-base">Page not found</p>
            </Animate>
          </div>
        </div>

        <div className="flex space-x-3">
          <Link to={"/"}>
            <p className="text-[var(--primary-color)] underline  text-xs">
              Home
            </p>
          </Link>
          <Link to={"/auth/signin"}>
            <p className="text-[var(--primary-color)] underline  text-xs">
              Signin
            </p>
          </Link>
          <Link to={"/auth/signup"}>
            <p className="text-[var(--primary-color)] underline  text-xs">
              Signup
            </p>
          </Link>
        </div>
      </div>
    </div>
  );
};


______ 404 not found Page


import BG from "../assets/signin_logo.jpeg";
import logo from "../assets/logo.svg";
import Input_fields from "../components/input_fields";
import {
  useFakeSigninStore,
  useSigninInputStore,
} from "../stores/validation-store";
import Buttons from "../components/buttons";
import { FaArrowLeft } from "react-icons/fa";
import { NavigateFunction, useNavigate } from "react-router";
import { Toast } from "../utils/toast_utils";
import { useViewState } from "../stores/view-store";

export default () => {
  const AuthStore = useSigninInputStore();
  const navigate = useNavigate();
  return (
    <div className="flex h-screen w-full justify-stretch items-stretch">
      <div className="flex-1 relative">
        <div
          style={{ backgroundImage: `url(${BG})` }}
          className="w-full bg-cover bg-center h-full"
        ></div>
        <div className="absolute top-0 left-0 p-[1.5em]">
          <div
            onClick={() => {
              navigate("/");
            }}
            className="bg-white z-20 hover:cursor-pointer items-center justify-center flex space-x-2 rounded-full py-2 px-[0.6em]"
          >
            <FaArrowLeft className="text-xs text-gray-600" />
            <p className="text-xs text-gray-600 font-medium">Back</p>
          </div>
        </div>
        <div className="absolute inset-0 bg-gradient-to-t from-black via-transparent to-transparent pointer-events-none"></div>
        <div className="absolute bottom-0 left-0">
          <div id="auth-bg-drop" className="py-[3.5em] px-[3.5em]">
            <p className="text-2xl font-bold text-white">
              Login to continue experiencing the best job offers and lessons
            </p>
            <p className="text-gray-300 text-sm">Enter details to proceed</p>
          </div>
        </div>
      </div>

      <div className="flex-1 flex flex-col items-start justify-center">
        <div className="px-[5em]">
          <div className="mb-[1.3em]">
            <img src="" alt="" srcSet={logo} className="w-[8em] mb-[0.5em]" />
            <p className="text-[1.5em] break-words text-gray-700 lexend-bold w-[60%] tracking-[-0.02em]">
              Welcome back, login to proceed
            </p>
            <p className="text-sm text-gray-500">
              Fill in your details to begin
            </p>
          </div>
          <form
            onSubmit={(event) => {
              Signin(event, navigate);
            }}
          >
            <div className="space-y-4">
              <Input_fields
                input_id="email"
                required
                hint="Enter your email address"
                type=""
                value={AuthStore.email}
                onChanged={(value) => AuthStore.setEmail(value)}
              />
              <Input_fields
                input_id="password"
                required
                hint="Enter your Password (8 - 20 characters)"
                type="password"
                value={AuthStore.password}
                onChanged={(value) => AuthStore.setPassword(value)}
              />
              <Buttons.primary_button>
                <p className="text-sm font-medium">Continue</p>
              </Buttons.primary_button>
            </div>
          </form>
          {/* <div className="mt-[1.2em]">
            <Buttons.custom_outline_button outline_color="border-gray-400">
              <div className="flex justify-center items-center py-1 space-x-3">
                <img srcSet={GoogleLogo} alt="" className="w-[1.3em]" />
                <p className="text-sm text-gray-500 font-medium">
                  Continue with Google
                </p>
              </div>
            </Buttons.custom_outline_button>
          </div> */}
        </div>
      </div>
    </div>
  );
};

function Signin(
  event: React.FormEvent<HTMLFormElement>,
  navigator: NavigateFunction
) {
  event.preventDefault();
  const EnteredDetails = useSigninInputStore.getState();
  const ConstDetails = useFakeSigninStore.getState();
  const ViewModel = useViewState.getState();
  if (EnteredDetails.email.trim() == "") {
    Toast.error("Please enter email before proceeding");
  } else if (EnteredDetails.password == "") {
    Toast.error("Please enter password before proceeding");
  } else if (
    EnteredDetails.email == ConstDetails.email &&
    EnteredDetails.password == ConstDetails.password
  ) {
    localStorage.setItem("loginToken", "logintokenishere");
    ConstDetails.setLoginState(true);
    ViewModel.setLoading(true);
    setTimeout(() => {
      ViewModel.setLoading(false);
      Toast.success("Logged in Successfully");
      navigator("/dashboard");
    }, 1500);
  } else {
    ViewModel.setLoading(true);
    setTimeout(() => {
      ViewModel.setLoading(false);
      Toast.error("Incorrect email or password");
    }, 1500);
  }
}


_____ signin page


import BG from "../assets/signup_slide1.png";
import logo from "../assets/logo.svg";
import Input_fields from "../components/input_fields";
import { useSignUpInputStore } from "../stores/validation-store";
import Buttons from "../components/buttons";
import GoogleLogo from "../assets/google_2504739 1.png";
import { FaArrowLeft } from "react-icons/fa";
import { useNavigate } from "react-router";
import { Toast } from "../utils/toast_utils";

export default () => {
  const AuthStore = useSignUpInputStore();
  const navigate = useNavigate();

  return (
    <div className="flex h-screen w-full justify-stretch items-stretch">
      <div className="flex-1 relative">
        <div
          style={{ backgroundImage: `url(${BG})` }}
          className="w-full bg-cover bg-center h-full"
        ></div>
        <div className="absolute top-0 left-0 p-[1.5em]">
          <div
            onClick={() => {
              navigate("/");
            }}
            className="bg-white z-20 hover:cursor-pointer items-center justify-center flex space-x-2 rounded-full py-2 px-[0.6em]"
          >
            <FaArrowLeft className="text-xs text-gray-600" />
            <p className="text-xs text-gray-600 font-medium">Back</p>
          </div>
        </div>
        <div className="absolute inset-0 bg-gradient-to-t from-black via-transparent to-transparent pointer-events-none"></div>
        <div className="absolute bottom-0 left-0">
          <div id="auth-bg-drop" className="py-[3.5em] px-[3.5em]">
            <p className="text-2xl font-bold text-white">
              Login to continue experiencing the best job offers and lessons
            </p>
            <p className="text-gray-300 text-sm">Enter details to proceed</p>
          </div>
        </div>
      </div>

      <div className="flex-1 flex flex-col items-start justify-center">
        <div className="px-[5em]">
          <div className="mb-[1.3em]">
            <img src="" alt="" srcSet={logo} className="w-[8em]" />
            <p className="text-[1.5em] text-gray-700 lexend-bold w-[60%]">
              Be part of the Driving force of Learning
            </p>
            <p className="text-sm text-gray-500">
              Fill in your details to begin
            </p>
          </div>
          <div className="space-y-4">
            <Input_fields
              input_id="name"
              required
              hint="Enter your fullname"
              type="text"
              value={AuthStore.full_name}
              onChanged={(value) => AuthStore.setFullName(value)}
            />
            <Input_fields
              input_id="email"
              required
              hint="Enter your email address"
              type=""
              value={AuthStore.email}
              onChanged={(value) => AuthStore.setEmail(value)}
            />
            <Input_fields
              input_id="password"
              required
              hint="Enter your Password (8 - 20 characters)"
              type="password"
              value={AuthStore.password}
              onChanged={(value) => AuthStore.setPassword(value)}
            />
            <Input_fields
              input_id="password_again"
              required
              hint="Confirm your password"
              type="password"
              value={AuthStore.password_again}
              onChanged={(value) => AuthStore.setPasswordAgain(value)}
            />
            <Buttons.primary_button
              onClick={() => {
                Toast.success("Signin with your details");
                navigate("/auth/signin");
              }}
            >
              <p className="text-sm font-medium">Sign Up</p>
            </Buttons.primary_button>
          </div>
        </div>
      </div>
    </div>
  );
};


_____ signup page